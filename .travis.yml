sudo: required
language: python
python: "3.6"

env:
    # Runs parallel jobs, 1 for each line. Tests different DB configurations for compatibility.
    - MONGODB_VER=mongodb-linux-x86_64-2.6.12 WIRED_TIGER=false MAKE=test
    - MONGODB_VER=mongodb-linux-x86_64-3.4.16 WIRED_TIGER=false MAKE=test-mongo
    - MONGODB_VER=mongodb-linux-x86_64-3.4.16 WIRED_TIGER=true  MAKE=test-mongo
    - MONGODB_VER=mongodb-linux-x86_64-3.6.6  WIRED_TIGER=false MAKE=test-mongo
    - MONGODB_VER=mongodb-linux-x86_64-3.6.6  WIRED_TIGER=true  MAKE=test-mongo
    
install:
  - pip install -r requirements.txt
  - pip install -r dev-requirements.txt
  
  - wget http://fastdl.mongodb.org/linux/$MONGODB_VER.tgz
  - tar xfz $MONGODB_VER.tgz
  - export MONGOD=`pwd`/$MONGODB_VER/bin/mongod
  - cp -n test.cfg.example test.cfg
  - sed -i "s#^test.temp.dir=.*#test.temp.dir=temp_test_dir#" test.cfg
  - sed -i "s#^test.mongo.exe.*#test.mongo.exe=$MONGOD#" test.cfg
  - sed -i "s#^test.mongo.wired_tiger.*#test.mongo.wired_tiger=$WIRED_TIGER#" test.cfg
  - cat test.cfg
 
script:
  - make $MAKE

jobs:
  include:
    - stage: deploy
      env: # The following are secure declarations for DOCKER_USER, DOCKER_PASS
        - secure: "TuPVXnPhNpTo1nQVBWpS08PaKQT3lu3+EysH1RUAHEsy+zciJWqNsyq3Afun+63I0cA7RcUTzbZr7A/nIvqN7iWh8Y9tDdHOoDXfu1kFiDraoom1TJe7s0QOUKA/crg8IYW+BA+rjJiitsJDLu+wQ8/SFWbwIghsn9+pgajj+t/4QJ3jO2v5ZuJy/gExiqeWnrAtnbQDp/ZHxZxt7iZdw41s27eYUHJc8lUGdoY5487zmIJWl8WXwx9v1PDx0sa9RSL9TIjiKm90vPzxZZZ5uXquCIVeaI7GtNmwiebJllGKtqHbaUcVRXjrWFUR3PPGihPxkceunEpIipV3ERekfeQt0WWDl1W2qGDWSwxzcQWFtF32uJjBpZ31BtGw9lffranUmvpT5cFPfNkzgz0YMQx7S/aL9JjBeNyj5BoWNUdELeL3hc1ndjOeObQ8hiQXXpfOHGvRyCFXMKuC+fwvi8QfeePq3bya/zq85a57yU7KZsPPAGky+7/WD/wPCANmD+AZkxvzopOPufj6CrSUIw2+zpIz58o4YzcUjimhAerNQ098Fs3dm8mra643PaAkdQD8rL1m3ai6RtOxCMYAsiWbhtEJr713QHeDN+VHJeKOtbg0dgJjRwgBGilrhAZkdgy4fq1/cGwyG6tIsQgAKvb14UHQdB+qC9Qopk3k+gQ="
        - secure: "blqo6j7LlDRwxqs3mnSfFNX3o8Eex9uEiG+I/OJgcKPRLAJKSoNYTkywxoTJMBEn8t+fLZoCCbMWUBlOfc2orHgV1q/3cCjN3ofu6XNDAfxnFTb5F2qVxCGmksfVD9Cvp1IZsLTzj+TfFTvoBy9IP3IBdRT3jD1vX+Ae4PbRC1K5tewDwu/hRR3k5fcMSApHHHVz654So4Mvd9hZ35XAD+otGxc0CvUYkb5RCgZIfpS+F5fcmku488XDVV/wHfvjsJg3IVBMylCF2XED5LeI3kRkoIjwscVGQ8rnY5qauFms1Zsp+yxfmL6/aXddj/q0zcnLYB7Zu7hIKuTwWK4li4R7UY6ci0ze7aWQE+fYdPvSadbSRH5+Bh4lwcNbPrgK2GY7SyOf6idvYDluaJBm+7hBWEtl6w/DUX3rF1FMcRI4SEQYdddwe3Uf416BegVe/oihI+f9diFykh3oN+S3k05JxVXr/wYk9NQjPzQ1f6jsiG0cFf1r7ZpegsNKIUCaoetNqN8rcNUedAWoE5VLoIF9TKSjvyl0U8xOW3afccWtfCIr1LdO9IFLYHnfbljY5pXBViJWbJwJcfR7wgQBIlWQLhPtB6/0pSXlCMmpCOvb/8vhHqJd+goD7jhbLaJ7mIUdBrEcJra2rCmg+gDdQv3lj8ub4dXGhoj6PXs3xTU="
      script: # Only push to dockerhub if this isn't a PR and we're updating master or develop
        - docker pull python/3.6-alpine
        - make docker_image
        - IMAGE_NAME=kbase/id_mapper build/push2dockerhub.sh

after_success:
  - |
    if [ "${MAKE}" == "test" ]; then
      coveralls
    fi
